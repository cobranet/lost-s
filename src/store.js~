import {combineReducers,createStore,applyMiddleware} from 'redux';
import logger from 'redux-logger'
import thunk from 'redux-thunk'
import handReducer  from './reducers/handReducer';
import userReducer from './reducers/userReducer';
import scoreReducer from './reducers/scoreReducer';
import himReducer from './reducers/himReducer';
import fetchReducer from './reducers/fetchReducer'
import errorReducer from './reducers/errorReducer'


const headers = {
	'Accept': 'application/json, text/plain, */*',
	'Content-Type': 'application/json'
};


const  users = [ {uid: "199734644140144",image: "./images/users/maka.jpg", name:"Marija Petrovic"},
           {uid: "117392552372115", image: "./images/users/pana.jpg",name:"Pana Petrovic"},
		 {uid: "10212423291510705",image: "./images/users/braca.jpg",name: "Bratislav Petrovic"}];



const reducers = combineReducers({
    fetch: fetchReducer,
    user: userReducer,
    hand: handReducer,
    score: scoreReducer,
    him: himReducer,
    error: errorReducer  
})




const middleware = applyMiddleware(logger,thunk);

const initialState = {fetch:false}

const store = createStore(reducers,initialState,middleware)

store.subscribe( ()=> {
    console.log(store.getState());
})

store.dispatch((dispatch)=>{    
    dispatch({type:"START_LOGIN"});

    fetch("http://localhost:8080/api/player",
	  { method: "POST",
	    headers: headers,
	    body: JSON.stringify({uid: "199734644140144",image: "./images/users/maka.jpg", name:"Marija Petrovic"})})
	.then((response)=> response.json())
	.then((data)=> dispatch({type:"LOGGED",payload:data}))
	.catch((error)=> dispatch({type:"ERROR",payload:error}));
});


export default store;
